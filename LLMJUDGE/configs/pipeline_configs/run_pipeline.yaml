# This is a config file for the run_pipeline.py script. The entries in this config specify proper method names that appear in tables of the HarmBench paper.
# E.g., GCG-Transfer test cases are generated using the EnsembleGCG class with a specific set of hyperparameters.

# ===== Documentation for the fields ===== #
# class_name: The name of the class defining a red teaming method. These are defined in the `baselines` folder.
#             This may be different from the proper name of a method. E.g., GCG-Transfer is an instance of the EnsembleGCG class.
# experiment_name_template: A template for the experiment name. This is used to generate experiment names for each target model.
#                           The template can include the placeholder "<model_name>", in which case an experiment name is generated
#                           for each target model according to the template, and the resulting test cases will only be evaluated on
#                           the target model specified in the experiment name.
# behavior_chunk_size: The number of behaviors to generate test cases for in a single slurm job. This enables parallelizing across behaviors.
#                      (Note: Some methods do not support parallelizing across behaviors. E.g., EnsembleGCG jointly optimizes over all behaviors.)
#                      (Note: This can be defined at the base level or at the experiment level. The experiment level takes precedence.)
# base_num_gpus: The base number of GPUs to use for generating test cases. If experiment_name_template includes "<model_name>", then we will
#                request `num_gpus` additional GPUs, where `num_gpus` is specified in the corresponding model config. For methods that do not
#                have "<model_name>" in their experiment_name_template, we will only request `base_num_gpus` GPUs.
# run_ids: A list of run IDs to use for the method. This is used for methods that require multiple runs to be averaged (e.g., EnsembleGCG).
#          This enables parallelization within behaviors, if you want to generate multiple test cases per behavior in parallel.
#          We use this for GCG-Multi and GCG-Transfer to obtain a lower-variance estimate of ASR.
# allowed_target_model_types: A list of model types that the method is designed to target (e.g., "open_source", "closed_source", "open_source_multimodal", "closed_source_multimodal").

AutoDAN:
  class_name: AutoDAN
  experiment_name_template: <model_name>
  behavior_chunk_size: 5
  base_num_gpus: 2
  allowed_target_model_types: [open_source]

AutoPrompt:
  class_name: AutoPrompt
  experiment_name_template: <model_name>
  behavior_chunk_size: 1
  base_num_gpus: 0
  allowed_target_model_types: [open_source]

DirectRequest:
  class_name: DirectRequest
  experiment_name_template: default
  behavior_chunk_size: 5
  base_num_gpus: 0
  allowed_target_model_types: [open_source, closed_source]

GCG-Multi:
  class_name: EnsembleGCG
  experiment_name_template: <model_name>
  behavior_chunk_size: all_behaviors
  base_num_gpus: 0
  run_ids: [0, 1, 2, 3, 4]
  allowed_target_model_types: [open_source]

GCG-Transfer:
  class_name: EnsembleGCG
  experiment_name_template: llama2_7b_vicuna_7b_llama2_13b_vicuna_13b_multibehavior_1000steps
  behavior_chunk_size: all_behaviors
  base_num_gpus: 4
  run_ids: [0, 1, 2, 3, 4]
  allowed_target_model_types: [open_source, closed_source]

FewShot:
  class_name: FewShot
  experiment_name_template: <model_name>
  behavior_chunk_size: 5
  base_num_gpus: 2
  allowed_target_model_types: [open_source]

GBDA:
  class_name: GBDA
  experiment_name_template: <model_name>
  behavior_chunk_size: 5
  base_num_gpus: 0
  allowed_target_model_types: [open_source]

GCG:
  class_name: GCG
  experiment_name_template: <model_name>
  behavior_chunk_size: 1
  base_num_gpus: 0
  allowed_target_model_types: [open_source]

GCG_custom_targets:
  class_name: GCG
  experiment_name_template: <model_name>_custom_targets
  behavior_chunk_size: 5
  base_num_gpus: 0
  allowed_target_model_types: [open_source]

# HumanJailbreaks-all:  # Warning: expensive to run on closed-source models
#   class_name: HumanJailbreaks
#   experiment_name_template: default
#   behavior_chunk_size: 5
#   base_num_gpus: 0
#   allowed_target_model_types: [open_source, closed_source]

HumanJailbreaks:
  class_name: HumanJailbreaks
  experiment_name_template: random_subset_5
  behavior_chunk_size: 5
  base_num_gpus: 0
  allowed_target_model_types: [open_source, closed_source]

PAIR:
  class_name: PAIR
  experiment_name_template: <model_name>
  base_num_gpus: 2
  behavior_chunk_size: 5
  allowed_target_model_types: [open_source, closed_source]

# PAP-avg:  # Warning: expensive to run on closed-source models
#   class_name: PAP
#   experiment_name_template: full_40
#   behavior_chunk_size: 5
#   base_num_gpus: 2
#   allowed_target_model_types: [open_source, closed_source]

PAP-top5:
  class_name: PAP
  experiment_name_template: top_5
  behavior_chunk_size: 5
  base_num_gpus: 2
  allowed_target_model_types: [open_source, closed_source]

PEZ:
  class_name: PEZ
  experiment_name_template: <model_name>
  base_num_gpus: 0
  behavior_chunk_size: 5
  allowed_target_model_types: [open_source]

TAP:
  class_name: TAP
  experiment_name_template: <model_name>
  base_num_gpus: 2
  behavior_chunk_size: 5
  allowed_target_model_types: [open_source, closed_source]

TAP-Transfer:
  class_name: TAP
  experiment_name_template: gpt-4-0613_judge_gpt-4-1106-preview_target
  base_num_gpus: 2
  behavior_chunk_size: 5
  allowed_target_model_types: [open_source, closed_source]

UAT:
  class_name: UAT
  experiment_name_template: <model_name>
  base_num_gpus: 0
  behavior_chunk_size: 5
  allowed_target_model_types: [open_source]

ZeroShot:
  class_name: ZeroShot
  experiment_name_template: mixtral_attacker_llm
  behavior_chunk_size: 100
  base_num_gpus: 2
  allowed_target_model_types: [open_source, closed_source]

MultiModalPGD:
  class_name: MultiModalPGD
  experiment_name_template: <model_name>
  behavior_chunk_size: 5
  base_num_gpus: 1
  allowed_target_model_types: [open_source_multimodal]

MultiModalPGDPatch:
  class_name: MultiModalPGDPatch
  experiment_name_template: <model_name>
  behavior_chunk_size: 5
  base_num_gpus: 1
  allowed_target_model_types: [open_source_multimodal]

MultiModalPGDBlankImage:
  class_name: MultiModalPGD
  experiment_name_template: <model_name>
  behavior_chunk_size: 5
  base_num_gpus: 1
  allowed_target_model_types: [open_source_multimodal]

MultiModalRenderText:
  class_name: MultiModalRenderText
  experiment_name_template: <model_name>
  behavior_chunk_size: 5
  base_num_gpus: 1
  allowed_target_model_types: [open_source_multimodal, closed_source_multimodal]

MultiModalDirectRequest:
  class_name: MultiModalDirectRequest
  experiment_name_template: default
  behavior_chunk_size: 5
  base_num_gpus: 1
  allowed_target_model_types: [open_source_multimodal, closed_source_multimodal]

GPTFuzz:
  class_name: GPTFuzz
  experiment_name_template: <model_name>
  behavior_chunk_size: 5
  base_num_gpus: 1
  allowed_target_model_types: [open_source]

ArtPrompt:
  class_name: ArtPrompt
  experiment_name_template: <model_name>
  behavior_chunk_size: 5
  base_num_gpus: 0
  allowed_target_model_types: [open_source, closed_source]
